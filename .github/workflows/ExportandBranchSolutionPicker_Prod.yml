name: Export and Branch Solution Picker
# Export solution from SANDBOX or DEV environment
#  unpack it and prepare, commit and push a git branch with the changes
#  uses DEV environment credentials
on:
  workflow_dispatch:
    inputs:
      solution_name:
        type: choice
        description: "name of the Solution"
        required: true
        options:
        - Onboarding2
        - BudgetRequest
        - BAAContractRequest
        - BusinessCardRequest
        - BAAProcess
        - StarterSite
        - Intranet
        - DPMODashboard
        - TravelForm
        - ProjectManagement
        - mpa_EmployeeExperienceBase
        - mpa_Kudos
        - mpa_AwardsAndRecognition
        - Default
      environment_url:
        type: choice
        description: "https endpoint of your Dataverse environment"
        required: true
        options:
        - https://org1bd2b9ba.crm9.dynamics.com
        - https://arpa-h-dev.crm9.dynamics.com
      solution_source_folder:
        description: "Location of the solution files"
        required: true
        default: out/solutions
      solution_outbound_folder:
        description: "solution outbound folder"
        required: true
        default: out/exported

permissions:
  contents: write

jobs:
  export-from-environment:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    environment: dev

    steps:
    - uses: actions/checkout@v4.2.2
      with:
        lfs: true

    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
       environment-url: ${{github.event.inputs.environment_url}}
       app-id: ${{secrets.CLIENT_ID}}
       client-secret: ${{ secrets.SP_SECRET_VALUE }}
       tenant-id: ${{secrets.TENANT_ID}}
 
    - name: Generate current date
      id: generate_date
      run: |
        $currentDate = Get-Date -Format "yyyyMMdd-HHmm"
        echo "Current date: $currentDate"
        echo "::set-output name=current_date::$currentDate"
      shell: pwsh

    - name: export-solution managed action
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{github.event.inputs.environment_url}}
        app-id: ${{secrets.CLIENT_ID}}
        client-secret: ${{ secrets.SP_SECRET_VALUE }}
        tenant-id: ${{secrets.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_outbound_folder}}/${{ github.event.inputs.solution_name }}_managed.zip
        managed: true
        run-asynchronously: true

    - name: export-solution unmanaged action
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{github.event.inputs.environment_url}}
        app-id: ${{secrets.CLIENT_ID}}
        client-secret: ${{ secrets.SP_SECRET_VALUE }}
        tenant-id: ${{secrets.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_outbound_folder }}/${{ github.event.inputs.solution_name }}.zip
        managed: false
        run-asynchronously: true

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.inputs.solution_outbound_folder }}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_source_folder }}/${{ github.event.inputs.solution_name }}
        solution-type: 'both'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v1
      with:
        branch-name: ${{ github.event.inputs.solution_name }}-${{ steps.generate_date.outputs.current_date }}
        solution-folder: ${{ github.event.inputs.solution_source_folder }}/${{ github.event.inputs.solution_name }}
        solution-target-folder: solutions/${{ github.event.inputs.solution_name }}/src
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
